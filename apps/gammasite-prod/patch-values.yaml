---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: radarr
  namespace: default
spec:
  values:
    nodeSelector:
      kubernetes.io/hostname: gammatron
    persistence:
      videos:
        enabled: true
        readOnly: false
        existingClaim: videos-pvc
      videos-archive:
        enabled: true
        readOnly: false
        existingClaim: videos-archive-pvc
      downloads:
        enabled: true
        readOnly: false
        existingClaim: downloads-pvc
      config:
        existingClaim: radarr-config
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sonarr
  namespace: default
spec:
  values:
    nodeSelector:
      kubernetes.io/hostname: gammatron
    persistence:
      videos:
        enabled: true
        readOnly: false
        existingClaim: videos-pvc
      videos-archive:
        enabled: true
        readOnly: false
        existingClaim: videos-archive-pvc
      downloads:
        enabled: true
        readOnly: false
        existingClaim: downloads-pvc
      config:
        type: hostPath
        hostPath: ${host_path_base}/sonarr-config
        hostPathType: DirectoryOrCreate
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: plexmediaserver
  namespace: default
spec:
  values:
    resources:
      requests:
        gpu.intel.com/i915: 1
      limits:
        gpu.intel.com/i915: 1
    nodeSelector:
      intel.feature.node.kubernetes.io/gpu: "true"
      kubernetes.io/hostname: gammatron
    podSecurityContext:
      supplementalGroups: [44, 109] # Extra groups for access to hardware encode/decode
    env:
      ADVERTISE_IP: https://plex.${cluster_ext_domain}/
    persistence:
      videos:
        enabled: true
        readOnly: true
        existingClaim: videos-pvc
      videos-archive:
        enabled: true
        readOnly: true
        existingClaim: videos-archive-pvc
      config:
        type: hostPath
        hostPath: ${host_path_base}/plexmediaserver-config
        hostPathType: DirectoryOrCreate
    service:
      main:
        type: LoadBalancer
        externalTrafficPolicy: Local
        annotations:
          metallb.universe.tf/loadBalancerIPs: ${metallb_ip_plex}
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: deluge
  namespace: default
spec:
  values:
    nodeSelector:
      kubernetes.io/hostname: gammatron
    persistence:
      downloads:
        enabled: true
        readOnly: false
        existingClaim: downloads-pvc
        mountPath: /datapool/downloads
      config:
        type: hostPath
        hostPath: ${host_path_base}/deluge-config
        hostPathType: DirectoryOrCreate
    service:
      daemon:
        enabled: true
        type: LoadBalancer
        annotations:
          metallb.universe.tf/loadBalancerIPs: ${metallb_ip_deluge}
        ports:
          torrents:
            enabled: true
            port: 55066
            targetPort: 55066
            protocol: TCP
          admin:
            enabled: true
            port: 58846
            targetPort: 58846
            protocol: TCP
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: syncthing
  namespace: default
spec:
  values:
    nodeSelector:
      kubernetes.io/hostname: gammatron
    persistence:
      videos:
        enabled: true
        readOnly: false
        existingClaim: videos-pvc
      videos-archive:
        enabled: true
        readOnly: false
        existingClaim: videos-archive-pvc
      config:
        type: hostPath
        hostPath: ${host_path_base}/syncthing-config
        hostPathType: DirectoryOrCreate
    service:
      main:
        annotations:
          metallb.universe.tf/loadBalancerIPs: ${metallb_ip_syncthing}
        enabled: true
        externalTrafficPolicy: Local
        type: LoadBalancer
        ports:
          sync:
            enabled: true
            port: 22000
            protocol: TCP
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: unifi-controller
  namespace: default
spec:
  values:
    service:
      main:
        type: LoadBalancer
        externalTrafficPolicy: Local
        annotations:
          metallb.universe.tf/loadBalancerIPs: ${metallb_ip_unifi}
    persistence:
      config:
        type: hostPath
        hostPath: ${host_path_base}/unifi-controller-config
        hostPathType: DirectoryOrCreate
    nodeSelector:
      kubernetes.io/hostname: gammatron
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: mosquitto
  namespace: default
spec:
  values:
    service:
      main:
        type: LoadBalancer
        externalTrafficPolicy: Local
        annotations:
          metallb.universe.tf/loadBalancerIPs: ${metallb_ip_mqtt}
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: influxdb
  namespace: default
spec:
  values:
    nodeSelector:
      kubernetes.io/hostname: gammatron
    service:
      main:
        type: LoadBalancer
        externalTrafficPolicy: Local
        annotations:
          metallb.universe.tf/loadBalancerIPs: ${metallb_ip_influx}
    persistence:
      influxdata:
        type: hostPath
        hostPath: ${host_path_base}/influxdb-influxdata
        hostPathType: DirectoryOrCreate
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: homeassistant
  namespace: default
spec:
  values:
    nodeSelector:
      kubernetes.io/hostname: gammatron
    persistence:
      config:
        type: hostPath
        hostPath: ${host_path_base}/homeassistant-config
        hostPathType: DirectoryOrCreate
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: jackett
  namespace: default
spec:
  values:
    nodeSelector:
      kubernetes.io/hostname: gammatron
    persistence:
      config:
        type: hostPath
        hostPath: ${host_path_base}/jackett-config
        hostPathType: DirectoryOrCreate
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: ombi
  namespace: default
spec:
  values:
    nodeSelector:
      kubernetes.io/hostname: gammatron
    persistence:
      config:
        type: hostPath
        hostPath: ${host_path_base}/ombi-config
        hostPathType: DirectoryOrCreate
