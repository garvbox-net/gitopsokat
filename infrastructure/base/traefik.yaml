---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: traefik
  namespace: kube-system
spec:
  interval: 5m
  chart:
    spec:
      chart: traefik
      version: 10.19.0
      sourceRef:
        kind: HelmRepository
        name: traefik-charts
        namespace: flux-system
  values:
    # Values taken from example: 
    #   https://github.com/traefik/traefik-helm-chart/blob/master/traefik/values.yaml
    # Removed some unused values

    # Create an IngressRoute for the dashboard
    ingressRoute:
      dashboard:
        enabled: true
    # Configure Traefik static configuration
    # Additional arguments to be passed at Traefik's binary
    # All available options available on https://docs.traefik.io/reference/static-configuration/cli/
    ## Use curly braces to pass values: `helm install --set="additionalArguments={--providers.kubernetesingress.ingressclass=traefik-internal,--log.level=DEBUG}"`
    additionalArguments: []
    #  - "--providers.kubernetesingress.ingressclass=traefik-internal"
    #  - "--log.level=DEBUG"

    # Environment variables to be passed to Traefik's binary
    env: []
    # - name: SOME_VAR
    #   value: some-var-value
    # - name: SOME_VAR_FROM_CONFIG_MAP
    #   valueFrom:
    #     configMapRef:
    #       name: configmap-name
    #       key: config-key
    # - name: SOME_SECRET
    #   valueFrom:
    #     secretKeyRef:
    #       name: secret-name
    #       key: secret-key


    # Configure ports
    ports:
      # The name of this one can't be changed as it is used for the readiness and
      # liveness probes, but you can adjust its config to your liking
      traefik:
        port: 9000
        # Use hostPort if set.
        # hostPort: 9000
        #
        # Use hostIP if set. If not set, Kubernetes will default to 0.0.0.0, which
        # means it's listening on all your interfaces and all your IPs. You may want
        # to set this value if you need traefik to listen on specific interface
        # only.
        # hostIP: 192.168.100.10

        # Override the liveness/readiness port. This is useful to integrate traefik
        # with an external Load Balancer that performs healthchecks.
        # healthchecksPort: 9000

        # Defines whether the port is exposed if service.type is LoadBalancer or
        # NodePort.
        #
        # You SHOULD NOT expose the traefik port on production deployments.
        # If you want to access it from outside of your cluster,
        # use `kubectl port-forward` or create a secure ingress
        expose: false
        # The exposed port for this service
        exposedPort: 9000
        # The port protocol (TCP/UDP)
        protocol: TCP
      web:
        port: 8000
        # hostPort: 8000
        expose: true
        exposedPort: 80
        # The port protocol (TCP/UDP)
        protocol: TCP
        # Use nodeport if set. This is useful if you have configured Traefik in a
        # LoadBalancer
        # nodePort: 32080
        # Port Redirections
        # Added in 2.2, you can make permanent redirects via entrypoints.
        # https://docs.traefik.io/routing/entrypoints/#redirection
        # redirectTo: websecure
      websecure:
        port: 8443
        # hostPort: 8443
        expose: true
        exposedPort: 443
        # The port protocol (TCP/UDP)
        protocol: TCP
        # nodePort: 32443
        # Enable HTTP/3.
        # Requires enabling experimental http3 feature and tls.
        # Note that you cannot have a UDP entrypoint with the same port.
        # http3: true
        # Set TLS at the entrypoint
        # https://doc.traefik.io/traefik/routing/entrypoints/#tls
        tls:
          enabled: false
          # this is the name of a TLSOption definition
          options: ""
          certResolver: ""
          domains: []
          # - main: example.com
          #   sans:
          #     - foo.example.com
          #     - bar.example.com
      metrics:
        port: 9100
        # hostPort: 9100
        # Defines whether the port is exposed if service.type is LoadBalancer or
        # NodePort.
        #
        # You may not want to expose the metrics port on production deployments.
        # If you want to access it from outside of your cluster,
        # use `kubectl port-forward` or create a secure ingress
        expose: false
        # The exposed port for this service
        exposedPort: 9100
        # The port protocol (TCP/UDP)
        protocol: TCP

    # Options for the main traefik service, where the entrypoints traffic comes
    # from.
    service:
      enabled: true
      type: LoadBalancer
      # Additional annotations applied to both TCP and UDP services (e.g. for cloud provider specific config)
      annotations: {}
      # Additional annotations for TCP service only
      annotationsTCP: {}
      # Additional annotations for UDP service only
      annotationsUDP: {}
      # Additional service labels (e.g. for filtering Service by custom labels)
      labels: {}
      # Additional entries here will be added to the service spec.
      # Cannot contain type, selector or ports entries.
      spec:
        loadBalancerIP: "${metallb_ip_traefik}"
        # externalTrafficPolicy: Cluster
        # clusterIP: "2.3.4.5"
      loadBalancerSourceRanges: []
        # - 192.168.0.1/32
        # - 172.16.0.0/16
      externalIPs: []
        # - 1.2.3.4
      # One of SingleStack, PreferDualStack, or RequireDualStack.
      # ipFamilyPolicy: SingleStack
      # List of IP families (e.g. IPv4 and/or IPv6).
      # ref: https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services
      # ipFamilies:
      #   - IPv4
      #   - IPv6
